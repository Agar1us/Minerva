version: '3.8'

services:
  embedder_server:
    build:
      context: ./embedder_server
      dockerfile: dockerfile
    container_name: embedder_server
    ports:
      - "8888:8888"
    env_file:
      - .env
    volumes:
      - ./embedder_server:/app
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    networks:
      - ml_network
    restart: unless-stopped

  ocr_server:
    build:
      context: ./ocr_server
      dockerfile: dockerfile
    container_name: ocr_server
    ports:
      - "8000:8000"
    volumes:
      - ~/.llm_cache:/root/.cache/huggingface
      - ./models:/models
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    networks:
      - ml_network
    restart: unless-stopped

  api_server:
    build:
      context: ./api_server  
      dockerfile: dockerfile
    container_name: api_server
    ports:
      - "9875:9875"
    env_file:
      - .env
    volumes:
      - ./api_server:/app
    depends_on:
      - embedder_server
      - ocr_server
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    networks:
      - ml_network
    restart: unless-stopped

  telegram_bot:
    build:
      context: ./telegram_bot
      dockerfile: dockerfile
    container_name: telegram_bot
    env_file:
      - .env
    volumes:
      - ./telegram_bot:/app
      - ./telegram_bot/minerva.db:/app/minerva.db
    depends_on:
      - api_server
    networks:
      - ml_network
    restart: unless-stopped

networks:
  ml_network:
    driver: bridge

volumes:
  llm_cache: